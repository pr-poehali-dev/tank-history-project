import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';
import { tanksDatabase } from '@/data/tanksData';
import { foreignTanks } from '@/data/foreignTanks';
import { 
  BarChart, 
  Bar, 
  XAxis, 
  YAxis, 
  CartesianGrid, 
  Tooltip, 
  Legend, 
  ResponsiveContainer,
  RadarChart,
  PolarGrid,
  PolarAngleAxis,
  PolarRadiusAxis,
  Radar
} from 'recharts';

const TankComparison = () => {
  const navigate = useNavigate();
  const [selectedRussian, setSelectedRussian] = useState(tanksDatabase[2]);
  const [selectedForeign, setSelectedForeign] = useState(foreignTanks[1]);
  const [comparisonPeriod, setComparisonPeriod] = useState('–í–û–í');

  const russianTanksByPeriod = tanksDatabase.filter(t => t.period === comparisonPeriod);
  const foreignTanksByPeriod = foreignTanks.filter(t => t.period === comparisonPeriod);

  const parseSpec = (spec: string): number => {
    const match = spec.match(/(\d+\.?\d*)/);
    return match ? parseFloat(match[1]) : 0;
  };

  const getComparisonData = () => {
    return [
      {
        category: '–ú–∞—Å—Å–∞ (—Ç)',
        –†–æ—Å—Å–∏—è: parseSpec(selectedRussian.specs.weight),
        –ü—Ä–æ—Ç–∏–≤–Ω–∏–∫: parseSpec(selectedForeign.specs.weight)
      },
      {
        category: '–ë—Ä–æ–Ω—è (–º–º)',
        –†–æ—Å—Å–∏—è: parseSpec(selectedRussian.armor?.front || selectedRussian.specs.armor),
        –ü—Ä–æ—Ç–∏–≤–Ω–∏–∫: parseSpec(selectedForeign.armor?.front || selectedForeign.specs.armor)
      },
      {
        category: '–°–∫–æ—Ä–æ—Å—Ç—å (–∫–º/—á)',
        –†–æ—Å—Å–∏—è: parseSpec(selectedRussian.specs.speed),
        –ü—Ä–æ—Ç–∏–≤–Ω–∏–∫: parseSpec(selectedForeign.specs.speed)
      },
      {
        category: '–ó–∞–ø–∞—Å —Ö–æ–¥–∞ (–∫–º)',
        –†–æ—Å—Å–∏—è: parseSpec(selectedRussian.specs.range),
        –ü—Ä–æ—Ç–∏–≤–Ω–∏–∫: parseSpec(selectedForeign.specs.range)
      }
    ];
  };

  const getRadarData = () => {
    const russianArmor = parseSpec(selectedRussian.armor?.front || selectedRussian.specs.armor);
    const foreignArmor = parseSpec(selectedForeign.armor?.front || selectedForeign.specs.armor);
    
    return [
      {
        characteristic: '–ó–∞—â–∏—Ç–∞',
        –†–æ—Å—Å–∏—è: (russianArmor / 200) * 100,
        –ü—Ä–æ—Ç–∏–≤–Ω–∏–∫: (foreignArmor / 200) * 100,
        fullMark: 100
      },
      {
        characteristic: '–ú–æ–±–∏–ª—å–Ω–æ—Å—Ç—å',
        –†–æ—Å—Å–∏—è: (parseSpec(selectedRussian.specs.speed) / 80) * 100,
        –ü—Ä–æ—Ç–∏–≤–Ω–∏–∫: (parseSpec(selectedForeign.specs.speed) / 80) * 100,
        fullMark: 100
      },
      {
        characteristic: '–û–≥–Ω–µ–≤–∞—è –º–æ—â—å',
        –†–æ—Å—Å–∏—è: (parseSpec(selectedRussian.specs.gun.match(/\d+/)?.[0] || '76') / 152) * 100,
        –ü—Ä–æ—Ç–∏–≤–Ω–∏–∫: (parseSpec(selectedForeign.specs.gun.match(/\d+/)?.[0] || '75') / 152) * 100,
        fullMark: 100
      },
      {
        characteristic: '–ó–∞–ø–∞—Å —Ö–æ–¥–∞',
        –†–æ—Å—Å–∏—è: (parseSpec(selectedRussian.specs.range) / 600) * 100,
        –ü—Ä–æ—Ç–∏–≤nik: (parseSpec(selectedForeign.specs.range) / 600) * 100,
        fullMark: 100
      }
    ];
  };

  const getCountryFlag = (country: string) => {
    const flags: Record<string, string> = {
      '–ì–µ—Ä–º–∞–Ω–∏—è': 'üá©üá™',
      '–°–®–ê': 'üá∫üá∏',
      '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è': 'üá¨üáß',
      '–§—Ä–∞–Ω—Ü–∏—è': 'üá´üá∑',
      '–°–°–°–†': 'üá∑üá∫',
      '–†–æ—Å—Å–∏—è': 'üá∑üá∫'
    };
    return flags[country] || 'üåç';
  };

  const getCountry = (tank: typeof selectedForeign) => {
    if (tank.design?.developer?.includes('–ì–µ—Ä–º–∞–Ω–∏—è')) return '–ì–µ—Ä–º–∞–Ω–∏—è';
    if (tank.design?.developer?.includes('–°–®–ê')) return '–°–®–ê';
    if (tank.design?.developer?.includes('–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è')) return '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è';
    if (tank.design?.developer?.includes('–§—Ä–∞–Ω—Ü–∏—è')) return '–§—Ä–∞–Ω—Ü–∏—è';
    return '–î—Ä—É–≥–∞—è';
  };

  const periods = [
    { id: '–ó–∞—Ä–æ–∂–¥–µ–Ω–∏–µ', name: '–ó–∞—Ä–æ–∂–¥–µ–Ω–∏–µ (1920-1930)' },
    { id: '–î–æ–≤–æ–µ–Ω–Ω—ã–π', name: '–î–æ–≤–æ–µ–Ω–Ω—ã–π (1930-1941)' },
    { id: '–í–û–í', name: '–í–û–í (1941-1945)' },
    { id: '–•–æ–ª–æ–¥–Ω–∞—è –≤–æ–π–Ω–∞', name: '–•–æ–ª–æ–¥–Ω–∞—è –≤–æ–π–Ω–∞ (1946-1991)' },
    { id: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å', name: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å (1991-–Ω.–≤.)' }
  ];

  return (
    <div className="min-h-screen bg-background">
      <nav className="sticky top-0 z-50 bg-primary/95 backdrop-blur border-b-2 border-accent shadow-lg">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <h1 className="text-2xl md:text-3xl font-display font-bold text-primary-foreground flex items-center gap-2">
              <Icon name="GitCompare" size={32} />
              –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¢–∞–Ω–∫–æ–≤
            </h1>
            <Button 
              variant="outline" 
              onClick={() => navigate('/')}
              className="text-primary-foreground border-primary-foreground hover:bg-primary-foreground hover:text-primary"
            >
              <Icon name="ArrowLeft" size={20} className="mr-2" />
              –ù–∞ –≥–ª–∞–≤–Ω—É—é
            </Button>
          </div>
        </div>
      </nav>

      <div className="container mx-auto px-4 py-12">
        <div className="mb-8">
          <h2 className="text-3xl font-display font-bold text-foreground mb-4">
            –†–æ—Å—Å–∏—è/–°–°–°–† –ø—Ä–æ—Ç–∏–≤ –≤—Å–µ–≥–æ –º–∏—Ä–∞
          </h2>
          <p className="text-lg text-muted-foreground">
            –°—Ä–∞–≤–Ω–∏—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å–æ–≤–µ—Ç—Å–∫–∏—Ö –∏ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö —Ç–∞–Ω–∫–æ–≤ —Å —Ç–µ—Ö–Ω–∏–∫–æ–π –ì–µ—Ä–º–∞–Ω–∏–∏, –°–®–ê, –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏–∏ –∏ –§—Ä–∞–Ω—Ü–∏–∏
          </p>
        </div>

        <div className="mb-8">
          <h3 className="text-xl font-bold text-foreground mb-4">–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥:</h3>
          <div className="flex flex-wrap gap-2">
            {periods.map(period => (
              <Button
                key={period.id}
                onClick={() => {
                  setComparisonPeriod(period.id);
                  const russianInPeriod = tanksDatabase.find(t => t.period === period.id);
                  const foreignInPeriod = foreignTanks.find(t => t.period === period.id);
                  if (russianInPeriod) setSelectedRussian(russianInPeriod);
                  if (foreignInPeriod) setSelectedForeign(foreignInPeriod);
                }}
                variant={comparisonPeriod === period.id ? 'default' : 'outline'}
                className={comparisonPeriod === period.id ? 'bg-accent text-accent-foreground' : ''}
              >
                {period.name}
              </Button>
            ))}
          </div>
        </div>

        <div className="grid md:grid-cols-2 gap-6 mb-8">
          <Card className="vintage-frame">
            <CardContent className="p-6">
              <h3 className="text-2xl font-display font-bold text-foreground mb-4 flex items-center gap-2">
                üá∑üá∫ –†–æ—Å—Å–∏—è/–°–°–°–†
              </h3>
              <div className="space-y-3 max-h-[400px] overflow-y-auto pr-2">
                {russianTanksByPeriod.map(tank => (
                  <button
                    key={tank.id}
                    onClick={() => setSelectedRussian(tank)}
                    className={`w-full text-left p-4 rounded-lg border-2 transition-all ${
                      selectedRussian.id === tank.id 
                        ? 'border-accent bg-accent/20' 
                        : 'border-border hover:border-accent/50 bg-muted/10'
                    }`}
                  >
                    <div className="font-bold text-foreground mb-1">{tank.name}</div>
                    <div className="text-sm text-muted-foreground">{tank.year}</div>
                    <div className="flex gap-2 mt-2">
                      <Badge variant="outline">{tank.specs.gun}</Badge>
                      <Badge variant="outline">{tank.specs.armor}</Badge>
                    </div>
                  </button>
                ))}
              </div>
            </CardContent>
          </Card>

          <Card className="vintage-frame">
            <CardContent className="p-6">
              <h3 className="text-2xl font-display font-bold text-foreground mb-4 flex items-center gap-2">
                üåç –ó–∞—Ä—É–±–µ–∂–Ω—ã–µ —Ç–∞–Ω–∫–∏
              </h3>
              <div className="space-y-3 max-h-[400px] overflow-y-auto pr-2">
                {foreignTanksByPeriod.map(tank => (
                  <button
                    key={tank.id}
                    onClick={() => setSelectedForeign(tank)}
                    className={`w-full text-left p-4 rounded-lg border-2 transition-all ${
                      selectedForeign.id === tank.id 
                        ? 'border-accent bg-accent/20' 
                        : 'border-border hover:border-accent/50 bg-muted/10'
                    }`}
                  >
                    <div className="flex items-center gap-2 mb-1">
                      <span>{getCountryFlag(getCountry(tank))}</span>
                      <span className="font-bold text-foreground">{tank.name}</span>
                    </div>
                    <div className="text-sm text-muted-foreground">{tank.year}</div>
                    <div className="flex gap-2 mt-2">
                      <Badge variant="outline">{tank.specs.gun}</Badge>
                      <Badge variant="outline">{tank.specs.armor}</Badge>
                    </div>
                  </button>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>

        <Tabs defaultValue="stats" className="mb-8">
          <TabsList className="grid w-full grid-cols-3 bg-muted/50">
            <TabsTrigger value="stats">
              <Icon name="BarChart3" size={18} className="mr-2" />
              –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
            </TabsTrigger>
            <TabsTrigger value="radar">
              <Icon name="Target" size={18} className="mr-2" />
              –ë–æ–µ–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
            </TabsTrigger>
            <TabsTrigger value="details">
              <Icon name="FileText" size={18} className="mr-2" />
              –î–µ—Ç–∞–ª–∏
            </TabsTrigger>
          </TabsList>

          <TabsContent value="stats">
            <Card className="vintage-frame">
              <CardContent className="p-8">
                <h3 className="text-2xl font-display font-bold text-foreground mb-6">
                  –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
                </h3>
                <ResponsiveContainer width="100%" height={400}>
                  <BarChart data={getComparisonData()}>
                    <CartesianGrid strokeDasharray="3 3" />
                    <XAxis dataKey="category" />
                    <YAxis />
                    <Tooltip />
                    <Legend />
                    <Bar dataKey="–†–æ—Å—Å–∏—è" fill="#ef4444" />
                    <Bar dataKey="–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫" fill="#3b82f6" />
                  </BarChart>
                </ResponsiveContainer>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="radar">
            <Card className="vintage-frame">
              <CardContent className="p-8">
                <h3 className="text-2xl font-display font-bold text-foreground mb-6">
                  –ë–æ–µ–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å (—Ä–∞–¥–∞—Ä)
                </h3>
                <ResponsiveContainer width="100%" height={400}>
                  <RadarChart data={getRadarData()}>
                    <PolarGrid />
                    <PolarAngleAxis dataKey="characteristic" />
                    <PolarRadiusAxis angle={90} domain={[0, 100]} />
                    <Radar name="–†–æ—Å—Å–∏—è" dataKey="–†–æ—Å—Å–∏—è" stroke="#ef4444" fill="#ef4444" fillOpacity={0.6} />
                    <Radar name="–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫" dataKey="–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫" stroke="#3b82f6" fill="#3b82f6" fillOpacity={0.6} />
                    <Legend />
                  </RadarChart>
                </ResponsiveContainer>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="details">
            <div className="grid md:grid-cols-2 gap-6">
              <Card className="vintage-frame">
                <CardContent className="p-6">
                  <div className="flex items-center gap-3 mb-4">
                    <span className="text-3xl">üá∑üá∫</span>
                    <div>
                      <h3 className="text-xl font-display font-bold text-foreground">{selectedRussian.name}</h3>
                      <p className="text-sm text-muted-foreground">{selectedRussian.year}</p>
                    </div>
                  </div>
                  <p className="text-foreground mb-4">{selectedRussian.description}</p>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span className="text-muted-foreground">–í–æ–æ—Ä—É–∂–µ–Ω–∏–µ:</span>
                      <span className="font-bold text-foreground">{selectedRussian.specs.gun}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-muted-foreground">–î–≤–∏–≥–∞—Ç–µ–ª—å:</span>
                      <span className="font-bold text-foreground">{selectedRussian.specs.engine}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-muted-foreground">–≠–∫–∏–ø–∞–∂:</span>
                      <span className="font-bold text-foreground">{selectedRussian.specs.crew}</span>
                    </div>
                  </div>
                  <Button 
                    className="w-full mt-4"
                    onClick={() => navigate(`/tank/${selectedRussian.id}`)}
                  >
                    –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                  </Button>
                </CardContent>
              </Card>

              <Card className="vintage-frame">
                <CardContent className="p-6">
                  <div className="flex items-center gap-3 mb-4">
                    <span className="text-3xl">{getCountryFlag(getCountry(selectedForeign))}</span>
                    <div>
                      <h3 className="text-xl font-display font-bold text-foreground">{selectedForeign.name}</h3>
                      <p className="text-sm text-muted-foreground">{selectedForeign.year}</p>
                    </div>
                  </div>
                  <p className="text-foreground mb-4">{selectedForeign.description}</p>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span className="text-muted-foreground">–í–æ–æ—Ä—É–∂–µ–Ω–∏–µ:</span>
                      <span className="font-bold text-foreground">{selectedForeign.specs.gun}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-muted-foreground">–î–≤–∏–≥–∞—Ç–µ–ª—å:</span>
                      <span className="font-bold text-foreground">{selectedForeign.specs.engine}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-muted-foreground">–≠–∫–∏–ø–∞–∂:</span>
                      <span className="font-bold text-foreground">{selectedForeign.specs.crew}</span>
                    </div>
                  </div>
                  <Button 
                    className="w-full mt-4"
                    onClick={() => navigate(`/tank/${selectedForeign.id}`)}
                  >
                    –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                  </Button>
                </CardContent>
              </Card>
            </div>
          </TabsContent>
        </Tabs>

        <Card className="vintage-frame">
          <CardContent className="p-8">
            <h3 className="text-2xl font-display font-bold text-foreground mb-6 flex items-center gap-2">
              <Icon name="Scale" size={28} />
              –ò—Ç–æ–≥–æ–≤–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
            </h3>
            <div className="grid md:grid-cols-3 gap-6">
              <div className="text-center p-6 bg-red-500/10 rounded-lg border-2 border-red-500/30">
                <div className="text-4xl font-display font-bold text-red-500 mb-2">
                  {selectedRussian.name.split(' ')[0]}
                </div>
                <p className="text-sm text-muted-foreground">–°–°–°–†/–†–æ—Å—Å–∏—è</p>
              </div>
              <div className="flex items-center justify-center">
                <Icon name="Swords" size={64} className="text-accent" />
              </div>
              <div className="text-center p-6 bg-blue-500/10 rounded-lg border-2 border-blue-500/30">
                <div className="text-4xl font-display font-bold text-blue-500 mb-2">
                  {selectedForeign.name.split(' ')[0]}
                </div>
                <p className="text-sm text-muted-foreground">{getCountry(selectedForeign)}</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      <footer className="bg-primary text-primary-foreground py-12 border-t-4 border-accent mt-12">
        <div className="container mx-auto px-4 text-center">
          <p className="font-body text-primary-foreground/80">¬© 2024 –ò—Å—Ç–æ—Ä–∏—è –¢–∞–Ω–∫–æ—Å—Ç—Ä–æ–µ–Ω–∏—è. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
        </div>
      </footer>
    </div>
  );
};

export default TankComparison;
